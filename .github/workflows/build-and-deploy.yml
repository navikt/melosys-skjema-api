name: Build and Deploy

on:
  push:
    branches: [ MELOSYS-7468 ]
    paths-ignore:
      - "**.md"
      - ".gitignore"
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: melosys
          POSTGRES_USER: melosys
          POSTGRES_DB: melosys_skjema
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run tests
        run: ./gradlew test
        env:
          DB_USERNAME: melosys
          DB_PASSWORD: melosys

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/MELOSYS-7468' || github.event_name == 'release'
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: melosys
          POSTGRES_USER: melosys
          POSTGRES_DB: melosys_skjema
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build application
        run: ./gradlew build
        env:
          DB_USERNAME: melosys
          DB_PASSWORD: melosys

      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: melosys
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/MELOSYS-7468'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to dev
        uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/application.yml
          VAR: image=${{ needs.build.outputs.image }}